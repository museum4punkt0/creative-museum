image: php:8.0-alpine

definitions:
    caches:
        composer: backend/vendor
        npm-cache: frontend/node_modules
        typo3: typo3/vendor

options:
    max-time: 10

pipelines:
    branches:
        develop:
            - parallel:
                - step:
                    name: Install frontend packages and build frontend
                    image: node:16.15.1
                    script:
                        - cd frontend
                        - touch .env
                        - echo BACKEND_URL=$API_STAGING_URL >> .env && echo IAM_URL=$IDP_STAGING_URL >> .env && echo BASE_URL=$STAGING_URL >> .env && echo USER_CENTRICS_ID=$USER_CENTRICS_ID >> .env
                        - npm ci && npm run build
                    artifacts:
                        - frontend/node_modules/**
                        - frontend/.nuxt/**
                        - frontend/static/sw.js
                - step:
                    name: Setup API-Platform Backend
                    image: composer:2.3.7
                    script:
                        - cd backend && composer validate
                        - composer install -n --prefer-dist --no-ansi --no-progress
                    caches:
                        - composer
                    artifacts:
                        - backend/vendor/**
                        - backend/public/bundles/**
                - step:
                    name: Setup TYPO3
                    image: composer:2.3.7
                    script:
                        - cd typo3 && composer validate
                        - composer install -n --prefer-dist --no-ansi --no-progress
                    caches:
                        - typo3
                    artifacts:
                        - typo3/vendor/**
                        - typo3/public/typo3
                        - typo3/public/index.php

            - step:
                name: Deployment
                deployment: staging
                image: rubygem/capistrano:3.7.2
                script:
                    - gem install capistrano-composer
                    - gem install capistrano-scm-copy
                    - cap staging deploy
